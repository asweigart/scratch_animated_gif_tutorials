import json
import os
import re

from pathlib import Path

scriptLocation = os.path.dirname(os.path.realpath(__file__))
TUTORIAL_JSON_FILES = [Path(scriptLocation) / 'archery' / 'archery.json']

indexTemplate = """<!DOCTYPE html>
<html lang="en">

<!-- THIS HTML FILE WAS AUTOMATICALLY GENERATED BY generateTutorials.py FROM https://github.com/asweigart/scratch_animated_gif_tutorials -->

<head>
<meta http-equiv="refresh" content="0; url=1.html" />
</head>
</html>"""


headerTemplate = """<!DOCTYPE html>
<html lang="en">

<!-- THIS HTML FILE WAS AUTOMATICALLY GENERATED BY generateTutorials.py FROM https://github.com/asweigart/scratch_animated_gif_tutorials -->

<head>
  <title>%s</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>

  <style>
  input[type=checkbox]
  {
    /* Double-sized Checkboxes */
    -ms-transform: scale(2); /* IE */
    -moz-transform: scale(2); /* FF */
    -webkit-transform: scale(2); /* Safari and Chrome */
    -o-transform: scale(2); /* Opera */
    padding: 10px;
  }
  </style>
</head>
<body>

<div class="container">
"""

slideTemplate = """
<h2>%s</h2>

%s
"""

footerTemplate = """</div>
</body></html>"""


checkboxRegex = re.compile(r'\[(.*?)\]\(checkbox\)')
markdownLinkRegex = re.compile(r'\[(.*?)\]\((.*?)\)')

for jsonFile in TUTORIAL_JSON_FILES:
    # create index.html for this tutorial
    with open(os.path.join(os.path.dirname(jsonFile), 'index.html'), 'w') as fo:
        fo.write(indexTemplate)


    # read in tutorial data from json file
    with open(jsonFile) as fo:
        content = fo.read()
        tutorialData = json.loads(content)

    numSteps = len(tutorialData['slides'])
    tutorialData['slides'].insert(0, None) # just so that the index and page numbers match up

    # create html page for each step
    for pageNum in range(1, numSteps + 1):

        btnHtml = ['<table><tr>'] # open row

        # add prev button
        if pageNum != 1:
            prevBtnHtml = """<td><button type="button" class="btn btn-primary" style="width: 40px;" onclick="location.href='%s.html'">&lt;</button></td>""" % (pageNum - 1)
        else:
            prevBtnHtml = ''
        btnHtml.append(prevBtnHtml)

        btnHtml.append('<td>')

        # add all buttons, with current one highlighted
        for linkNum in range(1, numSteps + 1):
            if pageNum == linkNum:
                btnHtml.append("""<button type="button" class="btn btn-primary" style="width: 40px;" onclick="location.href='%s.html'">%s</button>""" % (linkNum, linkNum))
            else:
                btnHtml.append("""<button type="button" class="btn btn-secondary" style="width: 40px;" onclick="location.href='%s.html'">%s</button>""" % (linkNum, linkNum))

        btnHtml.append('</td>')

        if pageNum != numSteps:
            nextBtnHtml = """<td><button type="button" class="btn btn-primary" style="width: 40px;" onclick="location.href='%s.html'">&gt;</button></td>""" % (pageNum + 1)
        else:
            nextBtnHtml = ''
        btnHtml.append(nextBtnHtml)

        btnHtml.append('</tr></table>') # close row

        btnHtml = '\n'.join(btnHtml)

        tutorialData['slides'][pageNum]['text'] = '<p>' + '</p><p>'.join(tutorialData['slides'][pageNum]['text'].split('\n')) + '</p>'


        html = headerTemplate % (tutorialData['name']) + \
               btnHtml + \
               slideTemplate % (tutorialData['slides'][pageNum]['title'], tutorialData['slides'][pageNum]['text']) + \
               footerTemplate

        pageHtmlFilename = os.path.join(os.path.dirname(jsonFile), '%s.html' % (pageNum))
        with open(pageHtmlFilename, 'w') as fo:
            fo.write(html)

